# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos import data_service_pb2 as protos_dot_data__service__pb2


class DataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDatasetData = channel.unary_unary(
                '/grpc.DataService/GetDatasetData',
                request_serializer=protos_dot_data__service__pb2.GetDatasetDataRequest.SerializeToString,
                response_deserializer=protos_dot_data__service__pb2.DatasetDataResponse.FromString,
                )
        self.CheckWashes = channel.unary_unary(
                '/grpc.DataService/CheckWashes',
                request_serializer=protos_dot_data__service__pb2.WashesRequest.SerializeToString,
                response_deserializer=protos_dot_data__service__pb2.WashesResponse.FromString,
                )
        self.CPDetection = channel.unary_unary(
                '/grpc.DataService/CPDetection',
                request_serializer=protos_dot_data__service__pb2.CPDetectionRequest.SerializeToString,
                response_deserializer=protos_dot_data__service__pb2.CPDetectionResponse.FromString,
                )
        self.ExtractRains = channel.unary_unary(
                '/grpc.DataService/ExtractRains',
                request_serializer=protos_dot_data__service__pb2.ExtractRainsRequest.SerializeToString,
                response_deserializer=protos_dot_data__service__pb2.ExtractRainsResponse.FromString,
                )
        self.CalculatePowerIndex = channel.unary_unary(
                '/grpc.DataService/CalculatePowerIndex',
                request_serializer=protos_dot_data__service__pb2.CalculatePowerIndexRequest.SerializeToString,
                response_deserializer=protos_dot_data__service__pb2.CalculatePowerIndexResponse.FromString,
                )
        self.Forecasting = channel.unary_unary(
                '/grpc.DataService/Forecasting',
                request_serializer=protos_dot_data__service__pb2.ForecastingRequest.SerializeToString,
                response_deserializer=protos_dot_data__service__pb2.ForecastingResponse.FromString,
                )
        self.EstimateYawMisalignment = channel.unary_unary(
                '/grpc.DataService/EstimateYawMisalignment',
                request_serializer=protos_dot_data__service__pb2.EstimateYawMisalignmentRequest.SerializeToString,
                response_deserializer=protos_dot_data__service__pb2.EstimateYawMisalignmentResponse.FromString,
                )


class DataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDatasetData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckWashes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CPDetection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExtractRains(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalculatePowerIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Forecasting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EstimateYawMisalignment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDatasetData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDatasetData,
                    request_deserializer=protos_dot_data__service__pb2.GetDatasetDataRequest.FromString,
                    response_serializer=protos_dot_data__service__pb2.DatasetDataResponse.SerializeToString,
            ),
            'CheckWashes': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckWashes,
                    request_deserializer=protos_dot_data__service__pb2.WashesRequest.FromString,
                    response_serializer=protos_dot_data__service__pb2.WashesResponse.SerializeToString,
            ),
            'CPDetection': grpc.unary_unary_rpc_method_handler(
                    servicer.CPDetection,
                    request_deserializer=protos_dot_data__service__pb2.CPDetectionRequest.FromString,
                    response_serializer=protos_dot_data__service__pb2.CPDetectionResponse.SerializeToString,
            ),
            'ExtractRains': grpc.unary_unary_rpc_method_handler(
                    servicer.ExtractRains,
                    request_deserializer=protos_dot_data__service__pb2.ExtractRainsRequest.FromString,
                    response_serializer=protos_dot_data__service__pb2.ExtractRainsResponse.SerializeToString,
            ),
            'CalculatePowerIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.CalculatePowerIndex,
                    request_deserializer=protos_dot_data__service__pb2.CalculatePowerIndexRequest.FromString,
                    response_serializer=protos_dot_data__service__pb2.CalculatePowerIndexResponse.SerializeToString,
            ),
            'Forecasting': grpc.unary_unary_rpc_method_handler(
                    servicer.Forecasting,
                    request_deserializer=protos_dot_data__service__pb2.ForecastingRequest.FromString,
                    response_serializer=protos_dot_data__service__pb2.ForecastingResponse.SerializeToString,
            ),
            'EstimateYawMisalignment': grpc.unary_unary_rpc_method_handler(
                    servicer.EstimateYawMisalignment,
                    request_deserializer=protos_dot_data__service__pb2.EstimateYawMisalignmentRequest.FromString,
                    response_serializer=protos_dot_data__service__pb2.EstimateYawMisalignmentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.DataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDatasetData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.DataService/GetDatasetData',
            protos_dot_data__service__pb2.GetDatasetDataRequest.SerializeToString,
            protos_dot_data__service__pb2.DatasetDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckWashes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.DataService/CheckWashes',
            protos_dot_data__service__pb2.WashesRequest.SerializeToString,
            protos_dot_data__service__pb2.WashesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CPDetection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.DataService/CPDetection',
            protos_dot_data__service__pb2.CPDetectionRequest.SerializeToString,
            protos_dot_data__service__pb2.CPDetectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExtractRains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.DataService/ExtractRains',
            protos_dot_data__service__pb2.ExtractRainsRequest.SerializeToString,
            protos_dot_data__service__pb2.ExtractRainsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CalculatePowerIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.DataService/CalculatePowerIndex',
            protos_dot_data__service__pb2.CalculatePowerIndexRequest.SerializeToString,
            protos_dot_data__service__pb2.CalculatePowerIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Forecasting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.DataService/Forecasting',
            protos_dot_data__service__pb2.ForecastingRequest.SerializeToString,
            protos_dot_data__service__pb2.ForecastingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EstimateYawMisalignment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.DataService/EstimateYawMisalignment',
            protos_dot_data__service__pb2.EstimateYawMisalignmentRequest.SerializeToString,
            protos_dot_data__service__pb2.EstimateYawMisalignmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
